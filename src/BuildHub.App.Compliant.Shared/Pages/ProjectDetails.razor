@page "/v2/project/{id:guid}"

@using BuildHub.App.Compliant.Application.Models
@using BuildHub.App.Compliant.Application.Services

@inject ISnackbar Snackbar

<PageTitle>Project Details</PageTitle>

@if (_project is null)
{
    <Loading />
}
else
{
    
    <MudContainer MaxWidth="MaxWidth.Large">
        <MudGrid Spacing="3">
            <MudItem xs="12">
                <MudPaper Elevation="2" Class="pa-4">
                    <MudForm @ref="_form" IsValid="@_isValid">
                        <MudText Typo="Typo.h5">Edit Project Details</MudText>

                        <MudTextField @bind-Value="_project.Reference" Label="Project Name" Required="true" For="@(() => _project.Reference)" />
                        <MudTextField @bind-Value="_project.Overview" Label="Description" Required="true" For="@(() => _project.Overview)" />

                        <MudGrid Spacing="3" Class="mt-4">
                            <MudItem xs="12" sm="6">
                                <MudTextField @bind-Value="_project.ProjectStartDate" Label="Start Date" Type="date" For="@(() => _project.ProjectStartDate)" />
                            </MudItem>
                            <MudItem xs="12" sm="6">
                                <MudTextField @bind-Value="_project.ProjectStartDate" Label="End Date" Type="date" For="@(() => _project.ProjectStartDate)" />
                            </MudItem>
                        </MudGrid>

                        <MudCardActions Class="mt-4">
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SaveChanges" Disabled="!_isValid">
                                Save Changes
                            </MudButton>
                            <MudButton Variant="Variant.Text" Color="Color.Secondary" OnClick="async () => await ResetForm()">Cancel</MudButton>
                        </MudCardActions>
                    </MudForm>
                </MudPaper>
            </MudItem>

            <MudItem xs="12">
                <MudPaper Elevation="2" Class="pa-4">
                    <MudText Typo="Typo.h6">Associated Documents</MudText>
                    <MudTable Items="_project.Evidence" Dense="true" Hover="true" Class="mt-2">
                        <HeaderContent>
                            <MudTh>Name</MudTh>
                            <MudTh>Type</MudTh>
                            <MudTh>Date Uploaded</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>@context.Name</MudTd>
                            <MudTd>@context.Type</MudTd>
                            <MudTd>@context.DateUploaded.Date.ToShortDateString()</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudContainer>
}

@code {
    [Parameter] 
    public Guid Id { get; set; }
    
    [Inject]
    IProjectService ProjectService { get; set; } = null!;

    private MudForm _form;
    private bool _isValid = true;
    private ProjectViewModel _project = null!;
    
    protected override async Task OnInitializedAsync()
    {
        _project = await ProjectService.GetProjectById(Id);
    }

    private async Task SaveChanges()
    {
        // Simulate saving data
        await Task.Delay(500);
        Snackbar.Add("Project details saved successfully.", Severity.Success);
    }

    private Task ResetForm()
    {
        return _form.ResetAsync();
    }
}

