@page "/project/{id:guid}"
@using BuildHub.App.Compliant.Application.Models
@using BuildHub.App.Compliant.Application.Services

<PageTitle>Project Details</PageTitle>

@if (_project is null)
{
    <Loading />
}
else
{
    <MudContainer MaxWidth="MaxWidth.Large">
        <MudGrid Spacing="3">
            <MudItem xs="12">
                <MudPaper Elevation="2" Class="pa-4">
                    <MudText Typo="Typo.h5">@_project.Reference</MudText>
                    <MudText Typo="Typo.body1" Class="mt-2">@_project.Overview</MudText>
                </MudPaper>
            </MudItem>
            <MudItem xs="12">
                <MudPaper Elevation="2" Class="pa-4">
                    <MudText Typo="Typo.h6">Evidence</MudText>
                    <MudTable Items="_project.Evidence" Dense="true" Hover="true" Class="mt-2">
                        <HeaderContent>
                            <MudTh>Name</MudTh>
                            <MudTh>Type</MudTh>
                            <MudTh>Date Uploaded</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>@context.Name</MudTd>
                            <MudTd>@context.Type</MudTd>
                            <MudTd>@context.DateUploaded.Date.ToShortDateString()</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudItem>
        </MudGrid>
    </MudContainer>
}

@code {
    [Parameter] 
    public Guid Id { get; set; }
    
    [Inject]
    IProjectService ProjectService { get; set; } = null!;

    private ProjectViewModel _project = null!;
    
    protected override async Task OnInitializedAsync()
    {
        _project = await ProjectService.GetProjectById(Id);
    }
}
